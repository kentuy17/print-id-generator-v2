import{c as L,l as u,m as G,T as H,n as V,W,a as Y,C as q,b as B,o as J,D as K,p as A,O as Q}from"./index-BbQyhQz7.js";import{r as s,j as o}from"./app-DentDv-F.js";import{u as D,e as U,c as n,b as v}from"./button-CYS4Z4mX.js";/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const X=[["path",{d:"M10 5a2 2 0 0 0-1.344.519l-6.328 5.74a1 1 0 0 0 0 1.481l6.328 5.741A2 2 0 0 0 10 19h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z",key:"1yo7s0"}],["path",{d:"m12 9 6 6",key:"anjzzh"}],["path",{d:"m18 9-6 6",key:"1fp51s"}]],Ne=L("Delete",X);var x="AlertDialog",[Z,_e]=Y(x,[u]),i=u(),y=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(G,{...r,...t,modal:!0})};y.displayName=x;var ee="AlertDialogTrigger",N=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(H,{...l,...r,ref:a})});N.displayName=ee;var ae="AlertDialogPortal",_=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(V,{...r,...t})};_.displayName=ae;var te="AlertDialogOverlay",h=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(Q,{...l,...r,ref:a})});h.displayName=te;var c="AlertDialogContent",[oe,re]=Z(c),R=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:r,...l}=e,g=i(t),p=s.useRef(null),F=D(a,p),m=s.useRef(null);return o.jsx(W,{contentName:c,titleName:j,docsSlug:"alert-dialog",children:o.jsx(oe,{scope:t,cancelRef:m,children:o.jsxs(q,{role:"alertdialog",...g,...l,ref:F,onOpenAutoFocus:B(l.onOpenAutoFocus,d=>{var f;d.preventDefault(),(f=m.current)==null||f.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(U,{children:r}),o.jsx(le,{contentRef:p})]})})})});R.displayName=c;var j="AlertDialogTitle",b=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(J,{...l,...r,ref:a})});b.displayName=j;var w="AlertDialogDescription",C=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(K,{...l,...r,ref:a})});C.displayName=w;var se="AlertDialogAction",E=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(A,{...l,...r,ref:a})});E.displayName=se;var T="AlertDialogCancel",P=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,{cancelRef:l}=re(T,t),g=i(t),p=D(a,l);return o.jsx(A,{...g,...r,ref:p})});P.displayName=T;var le=({contentRef:e})=>{const a=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${w}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},ie=y,ne=N,ce=_,S=h,O=R,$=E,M=P,I=b,z=C;const he=ie,Re=ne,de=ce,k=s.forwardRef(({className:e,...a},t)=>o.jsx(S,{className:n("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));k.displayName=S.displayName;const pe=s.forwardRef(({className:e,...a},t)=>o.jsxs(de,{children:[o.jsx(k,{}),o.jsx(O,{ref:t,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));pe.displayName=O.displayName;const ge=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",e),...a});ge.displayName="AlertDialogHeader";const me=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});me.displayName="AlertDialogFooter";const fe=s.forwardRef(({className:e,...a},t)=>o.jsx(I,{ref:t,className:n("text-lg font-semibold",e),...a}));fe.displayName=I.displayName;const ue=s.forwardRef(({className:e,...a},t)=>o.jsx(z,{ref:t,className:n("text-sm text-muted-foreground",e),...a}));ue.displayName=z.displayName;const Ae=s.forwardRef(({className:e,...a},t)=>o.jsx($,{ref:t,className:n(v(),e),...a}));Ae.displayName=$.displayName;const De=s.forwardRef(({className:e,...a},t)=>o.jsx(M,{ref:t,className:n(v({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));De.displayName=M.displayName;export{he as A,Ne as D,Re as a,pe as b,ge as c,fe as d,ue as e,me as f,De as g,Ae as h};
